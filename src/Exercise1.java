import java.util.Arrays;
import java.util.Scanner;
import java.util.stream.IntStream;

public class Exercise1 {

    // ????? ??? ????? ??????
    private static String getText() {
        Scanner sc = new Scanner(System.in);
        String newText = sc.nextLine();
        return newText;
    }

    /*??????? 1. ????? ??? ?????? ?????? ???????? ????? ? ??????
     */

    private static void longestWord(String inputText) {
        //??????????? ??????? ?????????? ????? ?? ?????? ?????????? ? ????? (????????? ?????? ????? ? ???????)
        StringBuilder cleanInputText = new StringBuilder(inputText.length());
        for (int i = 0; i < inputText.length(); i++) {
            char symb = inputText.charAt(i);
            if (Character.isAlphabetic(symb) || Character.isSpaceChar(symb)) {
                cleanInputText.append(symb);
            }
        }
        //??????? ?????? ?? ????
        String[] inputWords = (cleanInputText.toString()).split(" ");
        //???????? ??????? ? ?????? ???????
        for (String inputWord : inputWords) {
            inputWord = inputWord.trim();
        }
        //?????????? ????? ? ??????? ???? ? ?????? ?????? ??????? ? ?????????? ??? ?????? ? ???????
        int lengthCounter = 0;
        int wordIndex = 0;
        for (int i = 0; i < inputWords.length; i++) {
            if (inputWords[i].length() > lengthCounter) {
                lengthCounter = inputWords[i].length();
                wordIndex = i;
            }
        }
        //??????? ?????????
        System.out.println("????? ??????? ????? \"" + inputWords[wordIndex] + "\" ????? ????? " + lengthCounter);
        ;
    }


    /*??????? 2. ????? ??? ???????????, ???????? ?? ????? ???????????
     */

    private static void isPalindrome(String inputWord) {
        boolean isPalindrome = false;
        for (int i = 0; i < (inputWord.length() / 2); i++) {
            char first = inputWord.charAt(i);
            char last = inputWord.charAt(inputWord.length() - 1 - i);
            if (first == last) {
                isPalindrome = true;
            }
        }
        if (isPalindrome) {
            System.out.println("????? \"" + inputWord + "\" ???????? ???????????");
        } else {
            System.out.println("????? \"" + inputWord + "\" ?? ???????? ???????????");
        }
    }


    /*??????? 3. ????? ?????????? ??? ????????? ????? "????" ?? "[???????? ????????]"
     */
    private static void censorship(String uncensoredText, String unwantedWord) {
        String replaceWord = "[???????? ????????]";
        String[] textWords = uncensoredText.split(" ");
        StringBuilder censoredText = new StringBuilder();
        for (String textWord : textWords) {
            //??????, ????? ??? ????? ????? ???? - ?????? ????? ????? ????????? ????????
            if (textWord.equalsIgnoreCase(unwantedWord)) {
                censoredText.append(replaceWord);
            }
            //??????, ????? ????? ???????? ????
            else if (textWord.toLowerCase().contains(unwantedWord.toLowerCase())) {
                //?????????? ??????, ? ???????? ?????? ????
                int indexOfReplacement = textWord.toLowerCase().indexOf(unwantedWord.toLowerCase());
                //???????? ?? ????? ?????, ??????? ????????? ? ????
                String textWordPart = textWord.substring(indexOfReplacement, indexOfReplacement + unwantedWord.length());
                //?????????? ?????, ??? ?????, ??????????? ? ????, ?????????? ?????????
                String censoredWord = textWord.replaceAll(textWordPart, replaceWord);
                //????????, ??? ???????????? ????? ?? ???????? ???? ? ??????? ??, ???? ????????
                while (censoredWord.toLowerCase().contains(unwantedWord.toLowerCase())) {
                    //?????????? ??????, ? ???????? ?????? ????
                    int newindexOfReplacement = censoredWord.toLowerCase().indexOf(unwantedWord.toLowerCase());
                    //???????? ?? ????? ?????, ??????? ????????? ? ????
                    String censoredWordPart = censoredWord.substring(newindexOfReplacement, newindexOfReplacement + unwantedWord.length());
                    //?????????? ?????, ??? ?????, ??????????? ? ????, ?????????? ?????????
                    String oldCensoredWord = censoredWord;
                    censoredWord = oldCensoredWord.replaceAll(censoredWordPart, replaceWord);
                }

                //?????? ????????? ????? ????????? ???????????? ?????
                censoredText.append(censoredWord);
            }
            //??????, ????? ????? ?? ???????? ????
            else {
                censoredText.append(textWord);
            }
            //????????? ?????? ????? ?????
            censoredText.append(" ");
        }
        //??????? ????????????????? ?????
        System.out.println("\n??????? 3. ????????????????? ?????: \n"+censoredText.toString());
    }

    /*??????? 4. ?????? ?????????? ????????? ????????? ? ??????
     */

    private static void occurenceCount(String givenText, String string) {

        StringBuilder remainingText = new StringBuilder(givenText);
        int occurenceCounter = 0;
        //????????? ???? ?? ?????????, ???? ?????? ???????? ?????????
        while (remainingText.toString().contains(string)) {
            //?????????? ??????? ? ?????? ??????, ????? ???????? ???? ??????????? ?????????? ????????
            occurenceCounter++;
            int newindexOfOccurence = remainingText.indexOf(string) + string.length();
            //???????? ?????????? ????? ??????, ??????? ??????? ????? ??????? ????????? ?????????
            String remainingTextPart = remainingText.substring(newindexOfOccurence + string.length(), remainingText.length());
            //??????????? ?????? ??????? ?????????? ????? ??????
            remainingText = new StringBuilder(remainingTextPart);
        }
        //??????? ??????? ?????????
        System.out.println("?????? \"" + string + "\" ??????????? ? ?????? " + occurenceCounter + " ???.");
    }

    /*??????? 5. ?????????????? ???? ? ??????, ?? ?????????? ?????? ??????????, ???? ????? ????????? ?????????
     */

    private static void wordsInverter(String givenText) {
        //????????? ????? ?? ????? ?? ???????? ? ??????? ?????? ?? ???? ????
        String[] givenWords = givenText.split(" ");
        //??????? ?????? ??????????????? ???? ??? ?? ?????
        String[] invertedWords = new String[givenWords.length];
        //?????? ?????? ??????? ????????? ??????? ??? ???????????? ?????????? ??????? ??????????????? ???? ? ?????
        int i = 0;
        //????????? ?????? ??????????????? ????, ?????????? ?? ?????? ????? ??????? ???????? ???? ? ??????? ?????? StringBuilder
        for (String givenWord : givenWords) {
            StringBuilder wordBuilder = new StringBuilder(givenWord);
            invertedWords[i] = wordBuilder.reverse().toString();
            i++;
        }
        //????????? ???????? ??????? ??????????????? ???? ? ???? ?????? ? ???????
        System.out.println(String.join(" ", invertedWords));
    }


    public static void main(String[] args) {

        //??????? 1. ????? ??????? ????? ? ??????
        System.out.println("??????? 1. ?????????? ??????? ?????: ");
        String text = getText();
        longestWord(text);
        //String text2 = "? 2020 ???? ????? ???? ?? ???????? ????? ??????? ????? ?? ?????, ???? ?? ????????? ????? ??????????? . ???? ????? 9000000000 ????? ????????? ???? ??? ???????? ?????? ?????????? ...............";
        //longestWord(text2);

        //??????? 2. ??????????? ??????????
        System.out.println("\n??????? 2. ?????????? ??????? ?????: ");
        String word = getText();
        isPalindrome(word);

        //??????? 3. ?????? ????? ? ?????? ?????????
        String badText = "??? ???? ??-?????????? ???????? ?????? ????-???? ? ?????????? ?? ?????? ??????????, ???? ??????????? ?????? ????????????? ????????? ???-?? ??????. ???? ??????, ? ?????? ?? ????????????????? ?????, ?? ??? ?? ?? ???????? ???????? ????, ?? ??????? ?????????? ??????? C# ????? ????? ?? ??????? ????? ????????????.\n" +
                "?? ??? ????? ????????? ???????? ??????, ????? ???? ? ?? ?????? ? ???????? ?????? ?????? ???????? ???????? ???????? ?????????? ??????? ?????????? ? ??? ??????, ??? ?????????? ?????? ??? ?? ???? ?? ???????. ?????? ???? , C# ??? ???????, ??? ???????? ???????? ???? ? ?????????? ??????? ?????? ?? ???????????? ?????????? ??????.";
        String badWord = "????";
        censorship(badText, badWord);


        //??????? 4. ?????? ?????????? ????????? ????????? ? ??????
        String bigString = "????????????? ?????????? ????????????? ????????????";
        System.out.println("\n??????? 4. ???? ?????? : \n"+bigString+"\n??????? ?????????: ");
        String subString = getText();
        occurenceCount(bigString, subString);

        //??????? 5. ?????????????? ???? ? ??????
        System.out.println("\n??????? 5. ?????????? ??????? ????? ??? ?????? ?????????? ");
        String stringOfWords = getText();
        System.out.println("??????????? ????? ? ?????? :");
        wordsInverter(stringOfWords);
    }

}